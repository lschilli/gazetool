cmake_minimum_required(VERSION 2.8)

PROJECT(gazetool_ui)

set(GAZETOOL_MAJOR_VERSION 0)
set(GAZETOOL_MINOR_VERSION 1)
set(GAZETOOL_PATCH_VERSION 0)
set(GAZETOOL_VERSION
  ${GAZETOOL_MAJOR_VERSION}.${GAZETOOL_MINOR_VERSION}.${GAZETOOL_PATCH_VERSION})

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)

OPTION(ENABLE_YARP_SUPPORT "Enable yarp support" OFF)

set(CMAKE_AUTOMOC TRUE)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

FIND_PACKAGE(OpenCV REQUIRED)
FIND_PACKAGE(gazetool REQUIRED)
FIND_PACKAGE(Qt5Core REQUIRED)
FIND_PACKAGE(Qt5Widgets REQUIRED)
FIND_PACKAGE(Qt5OpenGL REQUIRED)
FIND_PACKAGE(Qt5Gui REQUIRED)
ADD_DEFINITIONS(-DENABLE_QT5)

INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS} ${gazetool_INCLUDE_DIRS})

QT5_WRAP_UI(UI_HEADERS gazergui.ui)

SET(GAZETOOL_BIN
    main.cpp
    gazergui.cpp
    workerthread.cpp
    glimageview.cpp
    ${UI_HEADERS})

ADD_EXECUTABLE(gazetool_ui ${GAZETOOL_BIN})
ADD_DEPENDENCIES(gazetool_ui ${UI_HEADERS})
TARGET_LINK_LIBRARIES(gazetool_ui ${gazetool_LIBRARIES} GL)
qt5_use_modules(gazetool_ui Core Widgets Gui OpenGL)

CONFIGURE_FILE("config/gazetool.sh.in" gazetool.sh @ONLY)

INSTALL(TARGETS gazetool_ui
  RUNTIME DESTINATION bin
)

INSTALL(PROGRAMS ${CMAKE_CURRENT_BINARY_DIR}/gazetool.sh DESTINATION bin)
